
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isUser(uid) {
      return isUserAuthenticated() && request.auth.uid == uid;
    }

    function isAdmin() {
      // Check if user has 'admin' in their roles array in their profile
      return isUserAuthenticated() && get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.roles.hasAny(['admin']);
    }

    // USER PROFILES
    // - Users can read and write to their own profile.
    // - Admins can read all profiles but cannot write to them (to prevent accidental changes).
    match /userProfiles/{userId} {
      allow read, update: if isUser(userId) || isAdmin();
      allow create: if isUserAuthenticated();
      allow list: if isAdmin();
    }
    
    // SERVICES
    // - Publicly readable by anyone.
    // - Writable only by admins.
    match /services/{serviceId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // SITE PROFILES (e.g., Mentor Profile)
    // - Publicly readable.
    // - Writable only by admins.
    match /siteProfiles/{profileId} {
        allow read: if true;
        allow write: if isAdmin();
    }
    
    // GLOBAL AVAILABILITY (SLOTS)
    // - Publicly readable for booking.
    // - Writable only by admins.
    match /globalAvailability/{date} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // BOOKINGS
    // - Users can create their own bookings.
    // - Users can read their own bookings.
    // - Users can update their own bookings only to request a refund.
    // - Admins can read and write all bookings.
    match /bookings/{bookingId} {
      allow read: if isUser(resource.data.uid) || isAdmin();
      allow create: if isUser(request.resource.data.uid);
      allow update: if (isUser(resource.data.uid) && request.resource.data.requestedRefund == true) || isAdmin();
      allow delete: if isAdmin();
    }

    // TESTIMONIALS
    // - Logged-in users can create testimonials.
    // - Admins can manage (read, update status) all testimonials.
    // - Public can only read approved testimonials.
    match /testimonials/{testimonialId} {
      allow read: if resource.data.status == 'approved' || isAdmin();
      allow create: if isUser(request.resource.data.uid);
      allow update, delete: if isAdmin();
    }
    
    // RESOURCES
    // - Publicly readable for now (can be restricted later based on purchase).
    // - Writable only by admins.
    match /resources/{resourceId} {
      allow read: if true; // Or check for entitlements
      allow write: if isAdmin();
    }

    // USER MESSAGES
    // - Users can create messages (i.e., submit contact forms).
    // - Users can only read messages in their own "thread" (matching their email).
    // - Admins can read all messages and create replies.
    match /userMessages/{messageId} {
      allow read: if (isUserAuthenticated() && request.auth.token.email == resource.data.userEmail) || isAdmin();
      allow create: if isUser(request.resource.data.uid) || isAdmin();
      allow update, delete: if isAdmin();
    }

    // BADGES
    // - Publicly readable by anyone.
    // - Writable only by admins.
    match /badges/{badgeId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // FEEDBACK SUBMISSIONS (Admin audit log)
    // - Writable and readable only by admins.
    match /feedbackSubmissions/{submissionId} {
        allow read, write: if isAdmin();
    }
  }
}
