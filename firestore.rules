
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isAdmin() {
      return request.auth != null && request.auth.token.isAdmin == true;
    }
  
    // Collections
    match /userProfiles/{userId} {
      allow read: if isAdmin() || request.auth.uid == userId;
      allow write: if isAdmin() || request.auth.uid == userId;
    }

    match /services/{serviceId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /siteProfiles/{profileId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /testimonials/{testimonialId} {
      allow read: if resource.data.status == 'approved';
      allow create: if request.auth != null;
      allow update, delete: if isAdmin();
    }
    
    match /bookings/{bookingId} {
      allow read, update: if isAdmin() || request.auth.uid == resource.data.uid;
      allow create: if request.auth != null;
      allow delete: if isAdmin();
    }
    
    match /badges/{badgeId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /globalAvailability/{dateString} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Catch-all rule for any other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
