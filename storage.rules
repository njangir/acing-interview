rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Default deny all reads and writes
    match /{allPaths=**} {
      allow read, write: if false;
    }

    // --- Publicly Readable Assets ---
    
    // Service thumbnails, site content (hero images), blog images are public
    match /services/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.roles.hasAny(['admin']);
    }
    match /site_content/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.roles.hasAny(['admin']);
    }
     match /blog/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.roles.hasAny(['admin']);
    }

    // --- User Specific, but Publicly Readable Avatars ---

    // User-uploaded profile images (if you implement this feature)
    // Path could be for example: users/{uid}/profile.jpg
    match /users/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Mentor profile images are publicly readable, but only admin writable
    match /mentor_profiles/{fileName} {
        allow read: if true;
        allow write: if request.auth != null && get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.roles.hasAny(['admin']);
    }

    // --- Private Files ---

    // Feedback reports are private.
    // Format: feedback_reports/{bookingId}_...
    // Only readable by the user associated with the booking or an admin.
    // Only writable by an admin.
    match /feedback_reports/{fileName} {
      allow read: if request.auth != null && 
                   (get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.roles.hasAny(['admin']) ||
                    get(/databases/$(database)/documents/bookings/$(fileName.split('_')[0])).data.uid == request.auth.uid);
      allow write: if request.auth != null &&
                    get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.roles.hasAny(['admin']);
    }

    // General resource documents are private.
    // Readable by any authenticated user (app logic will filter which ones they see).
    // Writable only by admins.
    match /resources/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null &&
                    get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.roles.hasAny(['admin']);
    }
  }
}
