
rules_version = '2';

// The rules below are for demonstration purposes only.
//
// Notes:
// - All paths are matched against the full path of the file, which includes the file name.
// - The wildcard {userId} is a string representing the user's ID from Firebase Authentication.
// - See https://firebase.google.com/docs/storage/security/start
service firebase.storage {
  match /b/{bucket}/o {
    
    // Default deny all reads and writes
    match /{allPaths=**} {
      allow read, write: if false;
    }

    // Services: Publicly readable images, admin-only writes
    // This rule allows anyone to read images from the 'services' folder and all its subfolders.
    // Only authenticated admins can write (upload, update, delete) files here.
    match /services/{allPaths=**} {
      allow read;
      allow write: if request.auth != null && request.auth.token.isAdmin == true;
    }

    // Feedback Reports: Admin writes, user-specific reads
    // Admins can upload any file.
    // Users can only read files where the filename contains their UID.
    match /feedback_reports/{fileName} {
      allow read: if request.auth != null && request.auth.uid == fileName.split('_')[0];
      allow write: if request.auth != null && request.auth.token.isAdmin == true;
    }

    // User Profile Images: User-specific writes, public reads
    // Users can upload/update their own profile picture. The path must contain their UID.
    // Anyone can read profile pictures.
    match /user_profiles/{userId}/{fileName} {
      allow read;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Testimonial Body Images: User-specific writes, public reads
    // Users can upload an image for their testimonial submission.
    // Anyone can read these images.
    match /testimonials_body_images/{fileName} {
      allow read;
      allow write: if request.auth != null && request.auth.uid == fileName.split('_')[0];
    }

     // Mentor Profile Images: Admin-only write, public reads
    match /mentor_profiles/{allPaths=**} {
      allow read;
      allow write: if request.auth != null && request.auth.token.isAdmin == true;
    }
    
    // Blog Images: Admin-only write, public reads
    match /blog/{allPaths=**} {
      allow read;
      allow write: if request.auth != null && request.auth.token.isAdmin == true;
    }

    // Resources (Documents): Admin-only write, authenticated user reads
    // Admins can upload resources.
    // Any authenticated user can download/read resources. Access control is managed at the Firestore level.
    match /resources/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.isAdmin == true;
    }

    // Site Content (e.g., hero image): Admin-only write, public reads
    match /site_content/{allPaths=**} {
      allow read;
      allow write: if request.auth != null && request.auth.token.isAdmin == true;
    }
  }
}
